============================= test session starts ==============================
platform darwin -- Python 3.8.3, pytest-6.1.2, py-1.9.0, pluggy-0.13.1 -- /Users/meganfrenkel/Workspace/KERMit/server/venv/bin/python
cachedir: .pytest_cache
rootdir: /Users/meganfrenkel/Workspace/KERMit
plugins: mock-3.3.1
collecting ... collected 96 items

server/tests/unit/test_authentication.py::test_authorize_token_missing_header PASSED [  1%]
server/tests/unit/test_authentication.py::test_authorize_token_missing_header2 PASSED [  2%]
server/tests/unit/test_authentication.py::test_authorize_token_malformed_header PASSED [  3%]
server/tests/unit/test_authentication.py::test_authorize_token_validation_error PASSED [  4%]
server/tests/unit/test_authentication.py::test_authorize_token_validation_success_register PASSED [  5%]
server/tests/unit/test_authentication.py::test_authorize_token_validation_success PASSED [  6%]
server/tests/unit/test_authentication.py::test_authorize_token_validation_not_registered PASSED [  7%]
server/tests/unit/test_authentication.py::test_register PASSED           [  8%]
server/tests/unit/test_authentication.py::test_register_missing_info_email PASSED [  9%]
server/tests/unit/test_authentication.py::test_register_missing_info_id PASSED [ 10%]
server/tests/unit/test_authentication.py::test_register_error_googleauth PASSED [ 11%]
server/tests/unit/test_authentication.py::test_register_exception PASSED [ 12%]
server/tests/unit/test_authentication.py::test_register_no_user_yet PASSED [ 13%]
server/tests/unit/test_authentication.py::test_register_exception_db PASSED [ 14%]
server/tests/unit/test_google_auth.py::test_validate_token PASSED        [ 15%]
server/tests/unit/test_google_auth.py::test_get_user_information PASSED  [ 16%]
server/tests/unit/test_leaderboard.py::test_get_leaderboard_no_leaders PASSED [ 17%]
server/tests/unit/test_leaderboard.py::test_get_leaderboard PASSED       [ 18%]
server/tests/unit/test_player.py::test_save_commit PASSED                [ 19%]
server/tests/unit/test_player.py::test_save PASSED                       [ 20%]
server/tests/unit/test_player.py::test_find_all_puzzles_for_player PASSED [ 21%]
server/tests/unit/test_player.py::test_find_players_for_puzzle PASSED    [ 22%]
server/tests/unit/test_player.py::test_add_player_to_puzzle_already_too_many_players PASSED [ 23%]
server/tests/unit/test_player.py::test_add_player_to_puzzle_player_doesnt_exist PASSED [ 25%]
server/tests/unit/test_player.py::test_add_player_to_puzzle_ok PASSED    [ 26%]
server/tests/unit/test_player.py::test_to_player_to_str PASSED           [ 27%]
server/tests/unit/test_puzzle_exception.py::test_get_message PASSED      [ 28%]
server/tests/unit/test_puzzle_pieces.py::test_find_all_pieces PASSED     [ 29%]
server/tests/unit/test_puzzle_pieces.py::test_get_piece PASSED           [ 30%]
server/tests/unit/test_puzzle_pieces.py::test_get_piece_none PASSED      [ 31%]
server/tests/unit/test_puzzle_pieces.py::test_save_autocommit PASSED     [ 32%]
server/tests/unit/test_puzzle_pieces.py::test_save PASSED                [ 33%]
server/tests/unit/test_puzzle_pieces.py::test_update_success PASSED      [ 34%]
server/tests/unit/test_puzzle_pieces.py::test_update_fail_static PASSED  [ 35%]
server/tests/unit/test_puzzle_pieces.py::test_get_as_str PASSED          [ 36%]
server/tests/unit/test_sudoku_puzzle.py::test_create_sudoku_puzzle_valid_defaults FAILED [ 37%]
server/tests/unit/test_sudoku_puzzle.py::test_create_sudoku_puzzle_valid_specification FAILED [ 38%]
server/tests/unit/test_sudoku_puzzle.py::test_create_sudoku_puzzle_invalid_difficulty_str PASSED [ 39%]
server/tests/unit/test_sudoku_puzzle.py::test_create_sudoku_puzzle_invalid_difficulty_too_low PASSED [ 40%]
server/tests/unit/test_sudoku_puzzle.py::test_create_sudoku_puzzle_invalid_difficulty_too_high PASSED [ 41%]
server/tests/unit/test_sudoku_puzzle.py::test_create_sudoku_puzzle_invalid_size_str PASSED [ 42%]
server/tests/unit/test_sudoku_puzzle.py::test_create_sudoku_puzzle_invalid_size_too_low PASSED [ 43%]
server/tests/unit/test_sudoku_puzzle.py::test_create_sudoku_puzzle_invalid_size_too_high PASSED [ 44%]
server/tests/unit/test_sudoku_puzzle.py::test_set_point_value1 FAILED    [ 45%]
server/tests/unit/test_sudoku_puzzle.py::test_set_point_value2 FAILED    [ 46%]
server/tests/unit/test_sudoku_puzzle.py::test_get_pieces_as_arr_all ERROR [ 47%]
server/tests/unit/test_sudoku_puzzle.py::test_get_pieces_as_arr_static_only ERROR [ 48%]
server/tests/unit/test_sudoku_puzzle.py::test_recreate_original_puzzle ERROR [ 50%]
server/tests/unit/test_sudoku_puzzle.py::test_check_for_completion_null_values ERROR [ 51%]
server/tests/unit/test_sudoku_puzzle.py::test_check_for_completion_complete ERROR [ 52%]
server/tests/unit/test_sudoku_puzzle.py::test_check_for_completion_incorrect_values ERROR [ 53%]
server/tests/unit/test_sudoku_puzzle.py::test_check_discrepancies_none ERROR [ 54%]
server/tests/unit/test_sudoku_puzzle.py::test_check_discrepancies_many_incorrect ERROR [ 55%]
server/tests/unit/test_sudoku_puzzle.py::test_check_discrepancies_incomplete_puzzle ERROR [ 56%]
server/tests/unit/test_sudoku_puzzle.py::test_get_puzzle_none PASSED     [ 57%]
server/tests/unit/test_sudoku_puzzle.py::test_get_puzzle_found FAILED    [ 58%]
server/tests/unit/test_sudoku_puzzle.py::test_save ERROR                 [ 59%]
server/tests/unit/test_sudoku_puzzle.py::test_save_autocommit ERROR      [ 60%]
server/tests/unit/test_sudoku_puzzle.py::test_attempt_update_complete_puzzle ERROR [ 61%]
server/tests/unit/test_sudoku_puzzle.py::test_update_invalid_coordinate1 ERROR [ 62%]
server/tests/unit/test_sudoku_puzzle.py::test_update_invalid_coordinate2 ERROR [ 63%]
server/tests/unit/test_sudoku_puzzle.py::test_update_invalid_coordinate3 ERROR [ 64%]
server/tests/unit/test_sudoku_puzzle.py::test_update_invalid_coordinate4 ERROR [ 65%]
server/tests/unit/test_sudoku_puzzle.py::test_update_invalid_value1 ERROR [ 66%]
server/tests/unit/test_sudoku_puzzle.py::test_update_invalid_value2 ERROR [ 67%]
server/tests/unit/test_sudoku_puzzle.py::test_update_valid ERROR         [ 68%]
server/tests/unit/test_sudoku_puzzle.py::test_update_valid_complete_puzzle ERROR [ 69%]
server/tests/unit/test_sudoku_puzzle.py::test_set_puzzle_complete ERROR  [ 70%]
server/tests/unit/test_sudoku_puzzle.py::test_as_str ERROR               [ 71%]
server/tests/unit/test_sudoku_resources.py::test_sudoku_to_json FAILED   [ 72%]
server/tests/unit/test_sudoku_resources.py::test_get_sudoku_puzzles_none PASSED [ 73%]
server/tests/unit/test_sudoku_resources.py::test_get_sudoku_puzzles_all FAILED [ 75%]
server/tests/unit/test_sudoku_resources.py::test_get_sudoku_puzzles_create_one_known_exception PASSED [ 76%]
server/tests/unit/test_sudoku_resources.py::test_get_sudoku_puzzles_create_one_unknown_exception PASSED [ 77%]
server/tests/unit/test_sudoku_resources.py::test_get_sudoku_puzzles_create_one PASSED [ 78%]
server/tests/unit/test_sudoku_resources.py::test_get_sudoku_puzzle_none_retrieved PASSED [ 79%]
server/tests/unit/test_sudoku_resources.py::test_get_sudoku_puzzle_none_associated PASSED [ 80%]
server/tests/unit/test_sudoku_resources.py::test_get_sudoku_puzzle_found FAILED [ 81%]
server/tests/unit/test_sudoku_resources.py::test_join_sudoku_puzzle_already_joined PASSED [ 82%]
server/tests/unit/test_sudoku_resources.py::test_join_sudoku_puzzle PASSED [ 83%]
server/tests/unit/test_sudoku_resources.py::test_join_sudoku_puzzle_known_exception PASSED [ 84%]
server/tests/unit/test_sudoku_resources.py::test_join_sudoku_puzzle_unknown_exception PASSED [ 85%]
server/tests/unit/test_sudoku_resources.py::test_get_sudoku_puzzles_add_move_not_associated PASSED [ 86%]
server/tests/unit/test_sudoku_resources.py::test_get_sudoku_puzzles_add_move FAILED [ 87%]
server/tests/unit/test_sudoku_resources.py::test_get_sudoku_puzzles_add_move_invalid FAILED [ 88%]
server/tests/unit/test_sudoku_resources.py::test_get_sudoku_puzzles_add_move_exception PASSED [ 89%]
server/tests/unit/test_sudoku_resources.py::test_get_sudoku_puzzles_delete_piece FAILED [ 90%]
server/tests/unit/test_sudoku_resources.py::test_get_sudoku_puzzles_delete_piece_invalid FAILED [ 91%]
server/tests/unit/test_sudoku_resources.py::test_get_sudoku_puzzles_get_solution_not_associated PASSED [ 92%]
server/tests/unit/test_sudoku_resources.py::test_get_sudoku_puzzles_get_solution_not_associated_2 PASSED [ 93%]
server/tests/unit/test_sudoku_resources.py::test_get_sudoku_puzzles_get_solution FAILED [ 94%]
server/tests/unit/test_user.py::test_create_user PASSED                  [ 95%]
server/tests/unit/test_user.py::test_user_as_str PASSED                  [ 96%]
server/tests/unit/test_user.py::test_user_print PASSED                   [ 97%]
server/tests/unit/test_user.py::test_user_save PASSED                    [ 98%]
server/tests/unit/test_user.py::test_find_by_g_id PASSED                 [100%]

==================================== ERRORS ====================================
_________________ ERROR at setup of test_get_pieces_as_arr_all _________________

    @pytest.fixture(autouse=False)
    def incomplete_puzzle():
        """
        Have an incomplete puzzle that can be used for testing
        """
>       puzzle = Puzzle(difficulty_level=0.2, size=2)

server/tests/unit/test_sudoku_puzzle.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
<string>:4: in __init__
    ???
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:433: in _initialize_instance
    manager.dispatch.init_failure(self, args, kwargs)
server/venv/lib/python3.8/site-packages/sqlalchemy/util/langhelpers.py:68: in __exit__
    compat.raise_(
server/venv/lib/python3.8/site-packages/sqlalchemy/util/compat.py:182: in raise_
    raise exception
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:430: in _initialize_instance
    return manager.original_init(*mixed[1:], **kwargs)
server/models/sudoku_puzzle.py:55: in __init__
    self.set_pieces()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Puzzle (transient 140400505594736)>

    def set_pieces(self):
        """
        Set the puzzle pieces for the Sudoku board.
        """
        pieces = Sudoku(self.size).difficulty(self.difficulty).board  # produces 2D array of values
        for i, pi in enumerate(pieces):
            for j, piece in enumerate(pi):
>               static_piece = bool(piece[i][j])
E               TypeError: 'int' object is not subscriptable

server/models/sudoku_puzzle.py:128: TypeError
_____________ ERROR at setup of test_get_pieces_as_arr_static_only _____________

    @pytest.fixture(autouse=False)
    def incomplete_puzzle():
        """
        Have an incomplete puzzle that can be used for testing
        """
>       puzzle = Puzzle(difficulty_level=0.2, size=2)

server/tests/unit/test_sudoku_puzzle.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
<string>:4: in __init__
    ???
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:433: in _initialize_instance
    manager.dispatch.init_failure(self, args, kwargs)
server/venv/lib/python3.8/site-packages/sqlalchemy/util/langhelpers.py:68: in __exit__
    compat.raise_(
server/venv/lib/python3.8/site-packages/sqlalchemy/util/compat.py:182: in raise_
    raise exception
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:430: in _initialize_instance
    return manager.original_init(*mixed[1:], **kwargs)
server/models/sudoku_puzzle.py:55: in __init__
    self.set_pieces()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Puzzle (transient 140400504832688)>

    def set_pieces(self):
        """
        Set the puzzle pieces for the Sudoku board.
        """
        pieces = Sudoku(self.size).difficulty(self.difficulty).board  # produces 2D array of values
        for i, pi in enumerate(pieces):
            for j, piece in enumerate(pi):
>               static_piece = bool(piece[i][j])
E               TypeError: 'int' object is not subscriptable

server/models/sudoku_puzzle.py:128: TypeError
_______________ ERROR at setup of test_recreate_original_puzzle ________________

    @pytest.fixture(autouse=False)
    def incomplete_puzzle():
        """
        Have an incomplete puzzle that can be used for testing
        """
>       puzzle = Puzzle(difficulty_level=0.2, size=2)

server/tests/unit/test_sudoku_puzzle.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
<string>:4: in __init__
    ???
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:433: in _initialize_instance
    manager.dispatch.init_failure(self, args, kwargs)
server/venv/lib/python3.8/site-packages/sqlalchemy/util/langhelpers.py:68: in __exit__
    compat.raise_(
server/venv/lib/python3.8/site-packages/sqlalchemy/util/compat.py:182: in raise_
    raise exception
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:430: in _initialize_instance
    return manager.original_init(*mixed[1:], **kwargs)
server/models/sudoku_puzzle.py:55: in __init__
    self.set_pieces()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Puzzle (transient 140400504905056)>

    def set_pieces(self):
        """
        Set the puzzle pieces for the Sudoku board.
        """
        pieces = Sudoku(self.size).difficulty(self.difficulty).board  # produces 2D array of values
        for i, pi in enumerate(pieces):
            for j, piece in enumerate(pi):
>               static_piece = bool(piece[i][j])
E               TypeError: 'int' object is not subscriptable

server/models/sudoku_puzzle.py:128: TypeError
___________ ERROR at setup of test_check_for_completion_null_values ____________

    @pytest.fixture(autouse=False)
    def incomplete_puzzle():
        """
        Have an incomplete puzzle that can be used for testing
        """
>       puzzle = Puzzle(difficulty_level=0.2, size=2)

server/tests/unit/test_sudoku_puzzle.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
<string>:4: in __init__
    ???
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:433: in _initialize_instance
    manager.dispatch.init_failure(self, args, kwargs)
server/venv/lib/python3.8/site-packages/sqlalchemy/util/langhelpers.py:68: in __exit__
    compat.raise_(
server/venv/lib/python3.8/site-packages/sqlalchemy/util/compat.py:182: in raise_
    raise exception
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:430: in _initialize_instance
    return manager.original_init(*mixed[1:], **kwargs)
server/models/sudoku_puzzle.py:55: in __init__
    self.set_pieces()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Puzzle (transient 140400505752832)>

    def set_pieces(self):
        """
        Set the puzzle pieces for the Sudoku board.
        """
        pieces = Sudoku(self.size).difficulty(self.difficulty).board  # produces 2D array of values
        for i, pi in enumerate(pieces):
            for j, piece in enumerate(pi):
>               static_piece = bool(piece[i][j])
E               TypeError: 'int' object is not subscriptable

server/models/sudoku_puzzle.py:128: TypeError
_____________ ERROR at setup of test_check_for_completion_complete _____________

    @pytest.fixture(autouse=False)
    def complete_puzzle():
>       puzzle = Puzzle(difficulty_level=0.2, size=2)

server/tests/unit/test_sudoku_puzzle.py:42: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
<string>:4: in __init__
    ???
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:433: in _initialize_instance
    manager.dispatch.init_failure(self, args, kwargs)
server/venv/lib/python3.8/site-packages/sqlalchemy/util/langhelpers.py:68: in __exit__
    compat.raise_(
server/venv/lib/python3.8/site-packages/sqlalchemy/util/compat.py:182: in raise_
    raise exception
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:430: in _initialize_instance
    return manager.original_init(*mixed[1:], **kwargs)
server/models/sudoku_puzzle.py:55: in __init__
    self.set_pieces()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Puzzle (transient 140400506756400)>

    def set_pieces(self):
        """
        Set the puzzle pieces for the Sudoku board.
        """
        pieces = Sudoku(self.size).difficulty(self.difficulty).board  # produces 2D array of values
        for i, pi in enumerate(pieces):
            for j, piece in enumerate(pi):
>               static_piece = bool(piece[i][j])
E               TypeError: 'int' object is not subscriptable

server/models/sudoku_puzzle.py:128: TypeError
_________ ERROR at setup of test_check_for_completion_incorrect_values _________

    @pytest.fixture(autouse=False)
    def incorrect_puzzle():
>       puzzle = Puzzle(difficulty_level=0.2, size=2)

server/tests/unit/test_sudoku_puzzle.py:68: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
<string>:4: in __init__
    ???
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:433: in _initialize_instance
    manager.dispatch.init_failure(self, args, kwargs)
server/venv/lib/python3.8/site-packages/sqlalchemy/util/langhelpers.py:68: in __exit__
    compat.raise_(
server/venv/lib/python3.8/site-packages/sqlalchemy/util/compat.py:182: in raise_
    raise exception
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:430: in _initialize_instance
    return manager.original_init(*mixed[1:], **kwargs)
server/models/sudoku_puzzle.py:55: in __init__
    self.set_pieces()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Puzzle (transient 140400506912144)>

    def set_pieces(self):
        """
        Set the puzzle pieces for the Sudoku board.
        """
        pieces = Sudoku(self.size).difficulty(self.difficulty).board  # produces 2D array of values
        for i, pi in enumerate(pieces):
            for j, piece in enumerate(pi):
>               static_piece = bool(piece[i][j])
E               TypeError: 'int' object is not subscriptable

server/models/sudoku_puzzle.py:128: TypeError
_______________ ERROR at setup of test_check_discrepancies_none ________________

    @pytest.fixture(autouse=False)
    def complete_puzzle():
>       puzzle = Puzzle(difficulty_level=0.2, size=2)

server/tests/unit/test_sudoku_puzzle.py:42: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
<string>:4: in __init__
    ???
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:433: in _initialize_instance
    manager.dispatch.init_failure(self, args, kwargs)
server/venv/lib/python3.8/site-packages/sqlalchemy/util/langhelpers.py:68: in __exit__
    compat.raise_(
server/venv/lib/python3.8/site-packages/sqlalchemy/util/compat.py:182: in raise_
    raise exception
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:430: in _initialize_instance
    return manager.original_init(*mixed[1:], **kwargs)
server/models/sudoku_puzzle.py:55: in __init__
    self.set_pieces()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Puzzle (transient 140400506858896)>

    def set_pieces(self):
        """
        Set the puzzle pieces for the Sudoku board.
        """
        pieces = Sudoku(self.size).difficulty(self.difficulty).board  # produces 2D array of values
        for i, pi in enumerate(pieces):
            for j, piece in enumerate(pi):
>               static_piece = bool(piece[i][j])
E               TypeError: 'int' object is not subscriptable

server/models/sudoku_puzzle.py:128: TypeError
__________ ERROR at setup of test_check_discrepancies_many_incorrect ___________

    @pytest.fixture(autouse=False)
    def incorrect_puzzle():
>       puzzle = Puzzle(difficulty_level=0.2, size=2)

server/tests/unit/test_sudoku_puzzle.py:68: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
<string>:4: in __init__
    ???
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:433: in _initialize_instance
    manager.dispatch.init_failure(self, args, kwargs)
server/venv/lib/python3.8/site-packages/sqlalchemy/util/langhelpers.py:68: in __exit__
    compat.raise_(
server/venv/lib/python3.8/site-packages/sqlalchemy/util/compat.py:182: in raise_
    raise exception
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:430: in _initialize_instance
    return manager.original_init(*mixed[1:], **kwargs)
server/models/sudoku_puzzle.py:55: in __init__
    self.set_pieces()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Puzzle (transient 140400503525680)>

    def set_pieces(self):
        """
        Set the puzzle pieces for the Sudoku board.
        """
        pieces = Sudoku(self.size).difficulty(self.difficulty).board  # produces 2D array of values
        for i, pi in enumerate(pieces):
            for j, piece in enumerate(pi):
>               static_piece = bool(piece[i][j])
E               TypeError: 'int' object is not subscriptable

server/models/sudoku_puzzle.py:128: TypeError
_________ ERROR at setup of test_check_discrepancies_incomplete_puzzle _________

    @pytest.fixture(autouse=False)
    def incomplete_puzzle():
        """
        Have an incomplete puzzle that can be used for testing
        """
>       puzzle = Puzzle(difficulty_level=0.2, size=2)

server/tests/unit/test_sudoku_puzzle.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
<string>:4: in __init__
    ???
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:433: in _initialize_instance
    manager.dispatch.init_failure(self, args, kwargs)
server/venv/lib/python3.8/site-packages/sqlalchemy/util/langhelpers.py:68: in __exit__
    compat.raise_(
server/venv/lib/python3.8/site-packages/sqlalchemy/util/compat.py:182: in raise_
    raise exception
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:430: in _initialize_instance
    return manager.original_init(*mixed[1:], **kwargs)
server/models/sudoku_puzzle.py:55: in __init__
    self.set_pieces()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Puzzle (transient 140400503521632)>

    def set_pieces(self):
        """
        Set the puzzle pieces for the Sudoku board.
        """
        pieces = Sudoku(self.size).difficulty(self.difficulty).board  # produces 2D array of values
        for i, pi in enumerate(pieces):
            for j, piece in enumerate(pi):
>               static_piece = bool(piece[i][j])
E               TypeError: 'int' object is not subscriptable

server/models/sudoku_puzzle.py:128: TypeError
_________________________ ERROR at setup of test_save __________________________

    @pytest.fixture(autouse=False)
    def complete_puzzle():
>       puzzle = Puzzle(difficulty_level=0.2, size=2)

server/tests/unit/test_sudoku_puzzle.py:42: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
<string>:4: in __init__
    ???
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:433: in _initialize_instance
    manager.dispatch.init_failure(self, args, kwargs)
server/venv/lib/python3.8/site-packages/sqlalchemy/util/langhelpers.py:68: in __exit__
    compat.raise_(
server/venv/lib/python3.8/site-packages/sqlalchemy/util/compat.py:182: in raise_
    raise exception
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:430: in _initialize_instance
    return manager.original_init(*mixed[1:], **kwargs)
server/models/sudoku_puzzle.py:55: in __init__
    self.set_pieces()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Puzzle (transient 140400505987808)>

    def set_pieces(self):
        """
        Set the puzzle pieces for the Sudoku board.
        """
        pieces = Sudoku(self.size).difficulty(self.difficulty).board  # produces 2D array of values
        for i, pi in enumerate(pieces):
            for j, piece in enumerate(pi):
>               static_piece = bool(piece[i][j])
E               TypeError: 'int' object is not subscriptable

server/models/sudoku_puzzle.py:128: TypeError
____________________ ERROR at setup of test_save_autocommit ____________________

    @pytest.fixture(autouse=False)
    def complete_puzzle():
>       puzzle = Puzzle(difficulty_level=0.2, size=2)

server/tests/unit/test_sudoku_puzzle.py:42: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
<string>:4: in __init__
    ???
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:433: in _initialize_instance
    manager.dispatch.init_failure(self, args, kwargs)
server/venv/lib/python3.8/site-packages/sqlalchemy/util/langhelpers.py:68: in __exit__
    compat.raise_(
server/venv/lib/python3.8/site-packages/sqlalchemy/util/compat.py:182: in raise_
    raise exception
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:430: in _initialize_instance
    return manager.original_init(*mixed[1:], **kwargs)
server/models/sudoku_puzzle.py:55: in __init__
    self.set_pieces()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Puzzle (transient 140400506640080)>

    def set_pieces(self):
        """
        Set the puzzle pieces for the Sudoku board.
        """
        pieces = Sudoku(self.size).difficulty(self.difficulty).board  # produces 2D array of values
        for i, pi in enumerate(pieces):
            for j, piece in enumerate(pi):
>               static_piece = bool(piece[i][j])
E               TypeError: 'int' object is not subscriptable

server/models/sudoku_puzzle.py:128: TypeError
____________ ERROR at setup of test_attempt_update_complete_puzzle _____________

    @pytest.fixture(autouse=False)
    def complete_puzzle():
>       puzzle = Puzzle(difficulty_level=0.2, size=2)

server/tests/unit/test_sudoku_puzzle.py:42: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
<string>:4: in __init__
    ???
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:433: in _initialize_instance
    manager.dispatch.init_failure(self, args, kwargs)
server/venv/lib/python3.8/site-packages/sqlalchemy/util/langhelpers.py:68: in __exit__
    compat.raise_(
server/venv/lib/python3.8/site-packages/sqlalchemy/util/compat.py:182: in raise_
    raise exception
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:430: in _initialize_instance
    return manager.original_init(*mixed[1:], **kwargs)
server/models/sudoku_puzzle.py:55: in __init__
    self.set_pieces()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Puzzle (transient 140400505207152)>

    def set_pieces(self):
        """
        Set the puzzle pieces for the Sudoku board.
        """
        pieces = Sudoku(self.size).difficulty(self.difficulty).board  # produces 2D array of values
        for i, pi in enumerate(pieces):
            for j, piece in enumerate(pi):
>               static_piece = bool(piece[i][j])
E               TypeError: 'int' object is not subscriptable

server/models/sudoku_puzzle.py:128: TypeError
______________ ERROR at setup of test_update_invalid_coordinate1 _______________

    @pytest.fixture(autouse=False)
    def incomplete_puzzle():
        """
        Have an incomplete puzzle that can be used for testing
        """
>       puzzle = Puzzle(difficulty_level=0.2, size=2)

server/tests/unit/test_sudoku_puzzle.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
<string>:4: in __init__
    ???
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:433: in _initialize_instance
    manager.dispatch.init_failure(self, args, kwargs)
server/venv/lib/python3.8/site-packages/sqlalchemy/util/langhelpers.py:68: in __exit__
    compat.raise_(
server/venv/lib/python3.8/site-packages/sqlalchemy/util/compat.py:182: in raise_
    raise exception
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:430: in _initialize_instance
    return manager.original_init(*mixed[1:], **kwargs)
server/models/sudoku_puzzle.py:55: in __init__
    self.set_pieces()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Puzzle (transient 140400505544816)>

    def set_pieces(self):
        """
        Set the puzzle pieces for the Sudoku board.
        """
        pieces = Sudoku(self.size).difficulty(self.difficulty).board  # produces 2D array of values
        for i, pi in enumerate(pieces):
            for j, piece in enumerate(pi):
>               static_piece = bool(piece[i][j])
E               TypeError: 'int' object is not subscriptable

server/models/sudoku_puzzle.py:128: TypeError
______________ ERROR at setup of test_update_invalid_coordinate2 _______________

    @pytest.fixture(autouse=False)
    def incomplete_puzzle():
        """
        Have an incomplete puzzle that can be used for testing
        """
>       puzzle = Puzzle(difficulty_level=0.2, size=2)

server/tests/unit/test_sudoku_puzzle.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
<string>:4: in __init__
    ???
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:433: in _initialize_instance
    manager.dispatch.init_failure(self, args, kwargs)
server/venv/lib/python3.8/site-packages/sqlalchemy/util/langhelpers.py:68: in __exit__
    compat.raise_(
server/venv/lib/python3.8/site-packages/sqlalchemy/util/compat.py:182: in raise_
    raise exception
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:430: in _initialize_instance
    return manager.original_init(*mixed[1:], **kwargs)
server/models/sudoku_puzzle.py:55: in __init__
    self.set_pieces()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Puzzle (transient 140400504127552)>

    def set_pieces(self):
        """
        Set the puzzle pieces for the Sudoku board.
        """
        pieces = Sudoku(self.size).difficulty(self.difficulty).board  # produces 2D array of values
        for i, pi in enumerate(pieces):
            for j, piece in enumerate(pi):
>               static_piece = bool(piece[i][j])
E               TypeError: 'int' object is not subscriptable

server/models/sudoku_puzzle.py:128: TypeError
______________ ERROR at setup of test_update_invalid_coordinate3 _______________

    @pytest.fixture(autouse=False)
    def incomplete_puzzle():
        """
        Have an incomplete puzzle that can be used for testing
        """
>       puzzle = Puzzle(difficulty_level=0.2, size=2)

server/tests/unit/test_sudoku_puzzle.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
<string>:4: in __init__
    ???
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:433: in _initialize_instance
    manager.dispatch.init_failure(self, args, kwargs)
server/venv/lib/python3.8/site-packages/sqlalchemy/util/langhelpers.py:68: in __exit__
    compat.raise_(
server/venv/lib/python3.8/site-packages/sqlalchemy/util/compat.py:182: in raise_
    raise exception
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:430: in _initialize_instance
    return manager.original_init(*mixed[1:], **kwargs)
server/models/sudoku_puzzle.py:55: in __init__
    self.set_pieces()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Puzzle (transient 140400507007040)>

    def set_pieces(self):
        """
        Set the puzzle pieces for the Sudoku board.
        """
        pieces = Sudoku(self.size).difficulty(self.difficulty).board  # produces 2D array of values
        for i, pi in enumerate(pieces):
            for j, piece in enumerate(pi):
>               static_piece = bool(piece[i][j])
E               TypeError: 'int' object is not subscriptable

server/models/sudoku_puzzle.py:128: TypeError
______________ ERROR at setup of test_update_invalid_coordinate4 _______________

    @pytest.fixture(autouse=False)
    def incomplete_puzzle():
        """
        Have an incomplete puzzle that can be used for testing
        """
>       puzzle = Puzzle(difficulty_level=0.2, size=2)

server/tests/unit/test_sudoku_puzzle.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
<string>:4: in __init__
    ???
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:433: in _initialize_instance
    manager.dispatch.init_failure(self, args, kwargs)
server/venv/lib/python3.8/site-packages/sqlalchemy/util/langhelpers.py:68: in __exit__
    compat.raise_(
server/venv/lib/python3.8/site-packages/sqlalchemy/util/compat.py:182: in raise_
    raise exception
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:430: in _initialize_instance
    return manager.original_init(*mixed[1:], **kwargs)
server/models/sudoku_puzzle.py:55: in __init__
    self.set_pieces()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Puzzle (transient 140400503066736)>

    def set_pieces(self):
        """
        Set the puzzle pieces for the Sudoku board.
        """
        pieces = Sudoku(self.size).difficulty(self.difficulty).board  # produces 2D array of values
        for i, pi in enumerate(pieces):
            for j, piece in enumerate(pi):
>               static_piece = bool(piece[i][j])
E               TypeError: 'int' object is not subscriptable

server/models/sudoku_puzzle.py:128: TypeError
_________________ ERROR at setup of test_update_invalid_value1 _________________

    @pytest.fixture(autouse=False)
    def incomplete_puzzle():
        """
        Have an incomplete puzzle that can be used for testing
        """
>       puzzle = Puzzle(difficulty_level=0.2, size=2)

server/tests/unit/test_sudoku_puzzle.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
<string>:4: in __init__
    ???
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:433: in _initialize_instance
    manager.dispatch.init_failure(self, args, kwargs)
server/venv/lib/python3.8/site-packages/sqlalchemy/util/langhelpers.py:68: in __exit__
    compat.raise_(
server/venv/lib/python3.8/site-packages/sqlalchemy/util/compat.py:182: in raise_
    raise exception
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:430: in _initialize_instance
    return manager.original_init(*mixed[1:], **kwargs)
server/models/sudoku_puzzle.py:55: in __init__
    self.set_pieces()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Puzzle (transient 140400506032192)>

    def set_pieces(self):
        """
        Set the puzzle pieces for the Sudoku board.
        """
        pieces = Sudoku(self.size).difficulty(self.difficulty).board  # produces 2D array of values
        for i, pi in enumerate(pieces):
            for j, piece in enumerate(pi):
>               static_piece = bool(piece[i][j])
E               TypeError: 'int' object is not subscriptable

server/models/sudoku_puzzle.py:128: TypeError
_________________ ERROR at setup of test_update_invalid_value2 _________________

    @pytest.fixture(autouse=False)
    def incomplete_puzzle():
        """
        Have an incomplete puzzle that can be used for testing
        """
>       puzzle = Puzzle(difficulty_level=0.2, size=2)

server/tests/unit/test_sudoku_puzzle.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
<string>:4: in __init__
    ???
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:433: in _initialize_instance
    manager.dispatch.init_failure(self, args, kwargs)
server/venv/lib/python3.8/site-packages/sqlalchemy/util/langhelpers.py:68: in __exit__
    compat.raise_(
server/venv/lib/python3.8/site-packages/sqlalchemy/util/compat.py:182: in raise_
    raise exception
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:430: in _initialize_instance
    return manager.original_init(*mixed[1:], **kwargs)
server/models/sudoku_puzzle.py:55: in __init__
    self.set_pieces()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Puzzle (transient 140400505397312)>

    def set_pieces(self):
        """
        Set the puzzle pieces for the Sudoku board.
        """
        pieces = Sudoku(self.size).difficulty(self.difficulty).board  # produces 2D array of values
        for i, pi in enumerate(pieces):
            for j, piece in enumerate(pi):
>               static_piece = bool(piece[i][j])
E               TypeError: 'int' object is not subscriptable

server/models/sudoku_puzzle.py:128: TypeError
_____________________ ERROR at setup of test_update_valid ______________________

    @pytest.fixture(autouse=False)
    def incomplete_puzzle():
        """
        Have an incomplete puzzle that can be used for testing
        """
>       puzzle = Puzzle(difficulty_level=0.2, size=2)

server/tests/unit/test_sudoku_puzzle.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
<string>:4: in __init__
    ???
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:433: in _initialize_instance
    manager.dispatch.init_failure(self, args, kwargs)
server/venv/lib/python3.8/site-packages/sqlalchemy/util/langhelpers.py:68: in __exit__
    compat.raise_(
server/venv/lib/python3.8/site-packages/sqlalchemy/util/compat.py:182: in raise_
    raise exception
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:430: in _initialize_instance
    return manager.original_init(*mixed[1:], **kwargs)
server/models/sudoku_puzzle.py:55: in __init__
    self.set_pieces()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Puzzle (transient 140400505040960)>

    def set_pieces(self):
        """
        Set the puzzle pieces for the Sudoku board.
        """
        pieces = Sudoku(self.size).difficulty(self.difficulty).board  # produces 2D array of values
        for i, pi in enumerate(pieces):
            for j, piece in enumerate(pi):
>               static_piece = bool(piece[i][j])
E               TypeError: 'int' object is not subscriptable

server/models/sudoku_puzzle.py:128: TypeError
_____________ ERROR at setup of test_update_valid_complete_puzzle ______________

    @pytest.fixture(autouse=False)
    def incomplete_puzzle():
        """
        Have an incomplete puzzle that can be used for testing
        """
>       puzzle = Puzzle(difficulty_level=0.2, size=2)

server/tests/unit/test_sudoku_puzzle.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
<string>:4: in __init__
    ???
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:433: in _initialize_instance
    manager.dispatch.init_failure(self, args, kwargs)
server/venv/lib/python3.8/site-packages/sqlalchemy/util/langhelpers.py:68: in __exit__
    compat.raise_(
server/venv/lib/python3.8/site-packages/sqlalchemy/util/compat.py:182: in raise_
    raise exception
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:430: in _initialize_instance
    return manager.original_init(*mixed[1:], **kwargs)
server/models/sudoku_puzzle.py:55: in __init__
    self.set_pieces()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Puzzle (transient 140400506986896)>

    def set_pieces(self):
        """
        Set the puzzle pieces for the Sudoku board.
        """
        pieces = Sudoku(self.size).difficulty(self.difficulty).board  # produces 2D array of values
        for i, pi in enumerate(pieces):
            for j, piece in enumerate(pi):
>               static_piece = bool(piece[i][j])
E               TypeError: 'int' object is not subscriptable

server/models/sudoku_puzzle.py:128: TypeError
__________________ ERROR at setup of test_set_puzzle_complete __________________

    @pytest.fixture(autouse=False)
    def incomplete_puzzle():
        """
        Have an incomplete puzzle that can be used for testing
        """
>       puzzle = Puzzle(difficulty_level=0.2, size=2)

server/tests/unit/test_sudoku_puzzle.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
<string>:4: in __init__
    ???
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:433: in _initialize_instance
    manager.dispatch.init_failure(self, args, kwargs)
server/venv/lib/python3.8/site-packages/sqlalchemy/util/langhelpers.py:68: in __exit__
    compat.raise_(
server/venv/lib/python3.8/site-packages/sqlalchemy/util/compat.py:182: in raise_
    raise exception
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:430: in _initialize_instance
    return manager.original_init(*mixed[1:], **kwargs)
server/models/sudoku_puzzle.py:55: in __init__
    self.set_pieces()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Puzzle (transient 140400504160368)>

    def set_pieces(self):
        """
        Set the puzzle pieces for the Sudoku board.
        """
        pieces = Sudoku(self.size).difficulty(self.difficulty).board  # produces 2D array of values
        for i, pi in enumerate(pieces):
            for j, piece in enumerate(pi):
>               static_piece = bool(piece[i][j])
E               TypeError: 'int' object is not subscriptable

server/models/sudoku_puzzle.py:128: TypeError
________________________ ERROR at setup of test_as_str _________________________

    @pytest.fixture(autouse=False)
    def incomplete_puzzle():
        """
        Have an incomplete puzzle that can be used for testing
        """
>       puzzle = Puzzle(difficulty_level=0.2, size=2)

server/tests/unit/test_sudoku_puzzle.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
<string>:4: in __init__
    ???
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:433: in _initialize_instance
    manager.dispatch.init_failure(self, args, kwargs)
server/venv/lib/python3.8/site-packages/sqlalchemy/util/langhelpers.py:68: in __exit__
    compat.raise_(
server/venv/lib/python3.8/site-packages/sqlalchemy/util/compat.py:182: in raise_
    raise exception
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:430: in _initialize_instance
    return manager.original_init(*mixed[1:], **kwargs)
server/models/sudoku_puzzle.py:55: in __init__
    self.set_pieces()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Puzzle (transient 140400506648944)>

    def set_pieces(self):
        """
        Set the puzzle pieces for the Sudoku board.
        """
        pieces = Sudoku(self.size).difficulty(self.difficulty).board  # produces 2D array of values
        for i, pi in enumerate(pieces):
            for j, piece in enumerate(pi):
>               static_piece = bool(piece[i][j])
E               TypeError: 'int' object is not subscriptable

server/models/sudoku_puzzle.py:128: TypeError
=================================== FAILURES ===================================
___________________ test_create_sudoku_puzzle_valid_defaults ___________________

    def test_create_sudoku_puzzle_valid_defaults():
        """
        Make sure that it is possible to create a sudoku puzzle using defaults.
        """
>       sudoku = Puzzle()

server/tests/unit/test_sudoku_puzzle.py:116: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
<string>:4: in __init__
    ???
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:433: in _initialize_instance
    manager.dispatch.init_failure(self, args, kwargs)
server/venv/lib/python3.8/site-packages/sqlalchemy/util/langhelpers.py:68: in __exit__
    compat.raise_(
server/venv/lib/python3.8/site-packages/sqlalchemy/util/compat.py:182: in raise_
    raise exception
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:430: in _initialize_instance
    return manager.original_init(*mixed[1:], **kwargs)
server/models/sudoku_puzzle.py:55: in __init__
    self.set_pieces()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Puzzle (transient 140400502835376)>

    def set_pieces(self):
        """
        Set the puzzle pieces for the Sudoku board.
        """
        pieces = Sudoku(self.size).difficulty(self.difficulty).board  # produces 2D array of values
        for i, pi in enumerate(pieces):
            for j, piece in enumerate(pi):
>               static_piece = bool(piece[i][j])
E               TypeError: 'NoneType' object is not subscriptable

server/models/sudoku_puzzle.py:128: TypeError
________________ test_create_sudoku_puzzle_valid_specification _________________

    def test_create_sudoku_puzzle_valid_specification():
        """
        Make sure that it is possible to create a sudoku puzzle by specifying difficulty and size.
        """
>       sudoku = Puzzle(difficulty_level=0.6, size=4)

server/tests/unit/test_sudoku_puzzle.py:126: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
<string>:4: in __init__
    ???
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:433: in _initialize_instance
    manager.dispatch.init_failure(self, args, kwargs)
server/venv/lib/python3.8/site-packages/sqlalchemy/util/langhelpers.py:68: in __exit__
    compat.raise_(
server/venv/lib/python3.8/site-packages/sqlalchemy/util/compat.py:182: in raise_
    raise exception
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:430: in _initialize_instance
    return manager.original_init(*mixed[1:], **kwargs)
server/models/sudoku_puzzle.py:55: in __init__
    self.set_pieces()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Puzzle (transient 140400506359872)>

    def set_pieces(self):
        """
        Set the puzzle pieces for the Sudoku board.
        """
        pieces = Sudoku(self.size).difficulty(self.difficulty).board  # produces 2D array of values
        for i, pi in enumerate(pieces):
            for j, piece in enumerate(pi):
>               static_piece = bool(piece[i][j])
E               TypeError: 'NoneType' object is not subscriptable

server/models/sudoku_puzzle.py:128: TypeError
____________________________ test_set_point_value1 _____________________________

    def test_set_point_value1():
        """
        Make sure that point values are calculated correctly based on difficulty and size.
        """
>       sudoku = Puzzle(difficulty_level=0.6, size=4)

server/tests/unit/test_sudoku_puzzle.py:196: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
<string>:4: in __init__
    ???
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:433: in _initialize_instance
    manager.dispatch.init_failure(self, args, kwargs)
server/venv/lib/python3.8/site-packages/sqlalchemy/util/langhelpers.py:68: in __exit__
    compat.raise_(
server/venv/lib/python3.8/site-packages/sqlalchemy/util/compat.py:182: in raise_
    raise exception
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:430: in _initialize_instance
    return manager.original_init(*mixed[1:], **kwargs)
server/models/sudoku_puzzle.py:55: in __init__
    self.set_pieces()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Puzzle (transient 140400505781216)>

    def set_pieces(self):
        """
        Set the puzzle pieces for the Sudoku board.
        """
        pieces = Sudoku(self.size).difficulty(self.difficulty).board  # produces 2D array of values
        for i, pi in enumerate(pieces):
            for j, piece in enumerate(pi):
>               static_piece = bool(piece[i][j])
E               TypeError: 'NoneType' object is not subscriptable

server/models/sudoku_puzzle.py:128: TypeError
____________________________ test_set_point_value2 _____________________________

    def test_set_point_value2():
        """
        Make sure that point values are calculated correctly based on difficulty and size.
        """
>       sudoku = Puzzle(difficulty_level=0.2, size=3)

server/tests/unit/test_sudoku_puzzle.py:204: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
<string>:4: in __init__
    ???
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:433: in _initialize_instance
    manager.dispatch.init_failure(self, args, kwargs)
server/venv/lib/python3.8/site-packages/sqlalchemy/util/langhelpers.py:68: in __exit__
    compat.raise_(
server/venv/lib/python3.8/site-packages/sqlalchemy/util/compat.py:182: in raise_
    raise exception
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:430: in _initialize_instance
    return manager.original_init(*mixed[1:], **kwargs)
server/models/sudoku_puzzle.py:55: in __init__
    self.set_pieces()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Puzzle (transient 140400504996432)>

    def set_pieces(self):
        """
        Set the puzzle pieces for the Sudoku board.
        """
        pieces = Sudoku(self.size).difficulty(self.difficulty).board  # produces 2D array of values
        for i, pi in enumerate(pieces):
            for j, piece in enumerate(pi):
>               static_piece = bool(piece[i][j])
E               TypeError: 'NoneType' object is not subscriptable

server/models/sudoku_puzzle.py:128: TypeError
____________________________ test_get_puzzle_found _____________________________

monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7fb18a5b9a60>
pieces = [<PuzzlePiece (transient 140400507199344)>, <PuzzlePiece (transient 140400507199392)>, <PuzzlePiece (transient 1404005...transient 140400507199200)>, <PuzzlePiece (transient 140400507197808)>, <PuzzlePiece (transient 140400507197904)>, ...]

    def test_get_puzzle_found(monkeypatch, pieces):
        """
        If the puzzle exists, it should be successfully returned by the get_puzzle() function.
        """
        class MockBaseQuery:
    
            def __init__(self, *args, **kwargs):
                pass
    
            def filter_by(self, *args, **kwargs):
                class Results():
                    def first(self):
                        return Puzzle(difficulty_level=0.2, size=2)
    
                return Results()
    
            def join(self, *args, **kwargs):
                return
    
        def mock_find_pieces(*args, **kwargs):
            return pieces
    
        monkeypatch.setattr('flask_sqlalchemy._QueryProperty.__get__', MockBaseQuery)
        monkeypatch.setattr(PuzzlePiece, "find_all_pieces", mock_find_pieces)
    
>       result = Puzzle.get_puzzle(1)

server/tests/unit/test_sudoku_puzzle.py:336: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
server/models/sudoku_puzzle.py:62: in get_puzzle
    puzzle = cls.query.filter_by(id=puzzle_id).first()  # returns None if no results matched
server/tests/unit/test_sudoku_puzzle.py:323: in first
    return Puzzle(difficulty_level=0.2, size=2)
<string>:4: in __init__
    ???
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:433: in _initialize_instance
    manager.dispatch.init_failure(self, args, kwargs)
server/venv/lib/python3.8/site-packages/sqlalchemy/util/langhelpers.py:68: in __exit__
    compat.raise_(
server/venv/lib/python3.8/site-packages/sqlalchemy/util/compat.py:182: in raise_
    raise exception
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:430: in _initialize_instance
    return manager.original_init(*mixed[1:], **kwargs)
server/models/sudoku_puzzle.py:55: in __init__
    self.set_pieces()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Puzzle (transient 140400507196416)>

    def set_pieces(self):
        """
        Set the puzzle pieces for the Sudoku board.
        """
        pieces = Sudoku(self.size).difficulty(self.difficulty).board  # produces 2D array of values
        for i, pi in enumerate(pieces):
            for j, piece in enumerate(pi):
>               static_piece = bool(piece[i][j])
E               TypeError: 'int' object is not subscriptable

server/models/sudoku_puzzle.py:128: TypeError
_____________________________ test_sudoku_to_json ______________________________

    def test_sudoku_to_json():
        """
        Conversion of sudoku puzzle to json should be successful.
        """
        foobar = User('54321', 'foo', 'bar', 'foobar@comsci.com')
        foobar.id = 1
    
        princess = User('98734', 'Princess', 'Bride', 'princess@princessbride.com')
        princess.id = 2
    
>       sudoku = Puzzle(difficulty_level=0.6, size=4)

server/tests/unit/test_sudoku_resources.py:76: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
<string>:4: in __init__
    ???
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:433: in _initialize_instance
    manager.dispatch.init_failure(self, args, kwargs)
server/venv/lib/python3.8/site-packages/sqlalchemy/util/langhelpers.py:68: in __exit__
    compat.raise_(
server/venv/lib/python3.8/site-packages/sqlalchemy/util/compat.py:182: in raise_
    raise exception
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:430: in _initialize_instance
    return manager.original_init(*mixed[1:], **kwargs)
server/models/sudoku_puzzle.py:55: in __init__
    self.set_pieces()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Puzzle (transient 140400507847632)>

    def set_pieces(self):
        """
        Set the puzzle pieces for the Sudoku board.
        """
        pieces = Sudoku(self.size).difficulty(self.difficulty).board  # produces 2D array of values
        for i, pi in enumerate(pieces):
            for j, piece in enumerate(pi):
>               static_piece = bool(piece[i][j])
E               TypeError: 'NoneType' object is not subscriptable

server/models/sudoku_puzzle.py:128: TypeError
_________________________ test_get_sudoku_puzzles_all __________________________

monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7fb18a631340>
user = <User (transient 140400507688464)>, mock_get_puzzle = None

    def test_get_sudoku_puzzles_all(monkeypatch, user, mock_get_puzzle):
        """
        If there are puzzles associated with the player, an attempt to get all puzzles should
        return all associated puzzles.
        """
    
        def mock_get_puzzles_for_player(*args, **kwargs):
            return [PuzzlePlayer(player_id=5, puzzle_id=3)]
    
        def mock_get_players(*args, **kwargs):
            return [
                User(first_name='Sally', last_name='Sue', email='sallysue@emails.com', g_id='123445')
            ]
    
        monkeypatch.setattr(PuzzlePlayer, 'find_all_puzzles_for_player', mock_get_puzzles_for_player)
        monkeypatch.setattr(PuzzlePlayer, 'find_players_for_puzzle', mock_get_players)
    
        with app.app_context():
            g.user = user
            puzzles_resource = SudokuPuzzles()
>           result = puzzles_resource.get()

server/tests/unit/test_sudoku_resources.py:131: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
server/resources/sudoku.py:48: in get
    'puzzles': [
server/resources/sudoku.py:50: in <listcomp>
    puzzle=Puzzle.get_puzzle(puzzle.puzzle_id),
server/tests/unit/test_sudoku_resources.py:58: in mock_get_puzzle
    puzzle = Puzzle(difficulty_level=0.5, completed=False, size=3)
<string>:4: in __init__
    ???
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:433: in _initialize_instance
    manager.dispatch.init_failure(self, args, kwargs)
server/venv/lib/python3.8/site-packages/sqlalchemy/util/langhelpers.py:68: in __exit__
    compat.raise_(
server/venv/lib/python3.8/site-packages/sqlalchemy/util/compat.py:182: in raise_
    raise exception
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:430: in _initialize_instance
    return manager.original_init(*mixed[1:], **kwargs)
server/models/sudoku_puzzle.py:55: in __init__
    self.set_pieces()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Puzzle (transient 140400507688800)>

    def set_pieces(self):
        """
        Set the puzzle pieces for the Sudoku board.
        """
        pieces = Sudoku(self.size).difficulty(self.difficulty).board  # produces 2D array of values
        for i, pi in enumerate(pieces):
            for j, piece in enumerate(pi):
>               static_piece = bool(piece[i][j])
E               TypeError: 'NoneType' object is not subscriptable

server/models/sudoku_puzzle.py:128: TypeError
_________________________ test_get_sudoku_puzzle_found _________________________

monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7fb18a740af0>
mock_get_puzzle = None, mock_single_puzzles_for_player = None
user = <User (transient 140400508799488)>

    def test_get_sudoku_puzzle_found(monkeypatch, mock_get_puzzle, mock_single_puzzles_for_player,
                                     user):
        """
        If an attempt is made to a get a puzzle that is associated with a user, the response should
        successfully return that puzzle.
        """
    
        def mock_get_players(*args, **kwargs):
            user = User(first_name='Sally', last_name='Sue', email='sallysue@emails.com', g_id='123445')
            user.id = 1
            return [user]
    
        monkeypatch.setattr(PuzzlePlayer, 'find_players_for_puzzle', mock_get_players)
    
        with app.app_context():
            puzzles_resource = SudokuPuzzle()
            g.user = user
>           result = puzzles_resource.get(1)

server/tests/unit/test_sudoku_resources.py:346: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
server/resources/sudoku.py:112: in get
    puzzle=Puzzle.get_puzzle(puzzle_id),
server/tests/unit/test_sudoku_resources.py:58: in mock_get_puzzle
    puzzle = Puzzle(difficulty_level=0.5, completed=False, size=3)
<string>:4: in __init__
    ???
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:433: in _initialize_instance
    manager.dispatch.init_failure(self, args, kwargs)
server/venv/lib/python3.8/site-packages/sqlalchemy/util/langhelpers.py:68: in __exit__
    compat.raise_(
server/venv/lib/python3.8/site-packages/sqlalchemy/util/compat.py:182: in raise_
    raise exception
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:430: in _initialize_instance
    return manager.original_init(*mixed[1:], **kwargs)
server/models/sudoku_puzzle.py:55: in __init__
    self.set_pieces()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Puzzle (transient 140400508797904)>

    def set_pieces(self):
        """
        Set the puzzle pieces for the Sudoku board.
        """
        pieces = Sudoku(self.size).difficulty(self.difficulty).board  # produces 2D array of values
        for i, pi in enumerate(pieces):
            for j, piece in enumerate(pi):
>               static_piece = bool(piece[i][j])
E               TypeError: 'NoneType' object is not subscriptable

server/models/sudoku_puzzle.py:128: TypeError
_______________________ test_get_sudoku_puzzles_add_move _______________________

monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7fb18a779b80>
user = <User (transient 140400509031184)>, mock_single_puzzles_for_player = None
mock_get_puzzle = None

    def test_get_sudoku_puzzles_add_move(monkeypatch, user, mock_single_puzzles_for_player,
                                         mock_get_puzzle):
        """
        If a player attempts to make a move on a puzzle that they are associated with,
        the attempt should be successful.
        """
        class MockParser:
            """
            Mock the parsing function of the endpoint.
            """
            def add_argument(self, *args, **kwargs):
                """
                Mock add argument, do nothing.
                """
                return
    
            def parse_args(self):
                """
                Mock the parsing function by returning known dict
                """
                return {
                    'x_coordinate': 0,
                    'y_coordinate': 1,
                    'value': 1
                }
    
        monkeypatch.setattr(db, "session", MockSession)
    
        with app.app_context():
            g.user = user
            puzzle_piece_resource = SudokuPuzzlePiece()
            puzzle_piece_resource.parser = MockParser()
            result = puzzle_piece_resource.post(1)
    
        expected = {'message': 'Successfully saved the submission of 1 at '
                               '(0, 1) on puzzle_id 1 by Jane Doe (id = 1)'}
>       assert result == expected
E       AssertionError: assert ({'message': ...puzzle'}, 500) == {'message': '...Doe (id = 1)'}
E         +({'message': 'Unexpected error occurred while adding new value to puzzle'}, 500)
E         -{'message': 'Successfully saved the submission of 1 at (0, 1) on puzzle_id 1 by Jane Doe (id = 1)'}
E         Full diff:
E         - {
E         -  'message': 'Successfully saved the submission of 1 at (0, 1) on puzzle_id 1 '
E         -             'by Jane Doe (id = 1)',
E         - }...
E         
E         ...Full output truncated (5 lines hidden), use '-vv' to show

server/tests/unit/test_sudoku_resources.py:504: AssertionError
----------------------------- Captured stdout call -----------------------------
Unexpected error: 'NoneType' object is not subscriptable
___________________ test_get_sudoku_puzzles_add_move_invalid ___________________

monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7fb18a630280>
user = <User (transient 140400507683360)>, mock_single_puzzles_for_player = None
mock_get_puzzle = None

    def test_get_sudoku_puzzles_add_move_invalid(monkeypatch, user, mock_single_puzzles_for_player,
                                                 mock_get_puzzle):
        """
        If a player attempts to make an invalid move on a puzzle that they are
        associated with, the request should not be successful.
        """
        class MockParser:
            """
            Mock the parsing function of the endpoint.
            """
            def add_argument(self, *args, **kwargs):
                """
                Mock add argument, do nothing.
                """
                pass
    
            def parse_args(self):
                """
                Mock the parsing function by returning known dict
                """
                return {
                    'x_coordinate': 0,
                    'y_coordinate': 100,
                    'value': 1
                }
    
        monkeypatch.setattr(db, "session", MockSession)
    
        with app.app_context():
            g.user = user
            puzzle_piece_resource = SudokuPuzzlePiece()
            puzzle_piece_resource.parser = MockParser()
            result = puzzle_piece_resource.post(1)
    
        expected = ({'message': 'Attempt to save 1 at (0, 100) on '
                                'puzzle_id 1 by user Jane Doe (id = 1) was unsuccessful',
                     'reason': 'Coordinates provided (0, 100) are outside the range of the puzzle. '
                               'Available coordinates are (0, 0) to (9, 9).'}, 400)
>       assert result == expected
E       AssertionError: assert ({'message': ...puzzle'}, 500) == ({'message': ...9, 9).'}, 400)
E         At index 0 diff: {'message': 'Unexpected error occurred while adding new value to puzzle'} != {'message': 'Attempt to save 1 at (0, 100) on puzzle_id 1 by user Jane Doe (id = 1) was unsuccessful', 'reason': 'Coordinates provided (0, 100) are outside the range of the puzzle. Available coordinates are (0, 0) to (9, 9).'}
E         Full diff:
E           (
E         +  {'message': 'Unexpected error occurred while adding new value to puzzle'},
E         -  {'message': 'Attempt to save 1 at (0, 100) on puzzle_id 1 by user Jane Doe '
E         -              '(id = 1) was unsuccessful',
E         -   'reason': 'Coordinates provided (0, 100)...
E         
E         ...Full output truncated (7 lines hidden), use '-vv' to show

server/tests/unit/test_sudoku_resources.py:545: AssertionError
----------------------------- Captured stdout call -----------------------------
Unexpected error: 'NoneType' object is not subscriptable
_____________________ test_get_sudoku_puzzles_delete_piece _____________________

monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7fb18a2d58b0>
user = <User (transient 140400504167296)>, mock_single_puzzles_for_player = None
mock_get_puzzle = None

    def test_get_sudoku_puzzles_delete_piece(monkeypatch, user, mock_single_puzzles_for_player,
                                             mock_get_puzzle):
        """
        If a player attempts to make a move on a puzzle that they are associated
        with, the attempt should be successful.
        """
        class MockParser:
            """
            Mock the parsing function of the endpoint.
            """
            def add_argument(self, *args, **kwargs):
                """
                Mock add argument, do nothing.
                """
                return
    
            def parse_args(self):
                """
                Mock the parsing function by returning known dict
                """
                return {
                    'x_coordinate': 0,
                    'y_coordinate': 1
                }
    
        monkeypatch.setattr(db, "session", MockSession)
    
        with app.app_context():
            g.user = user
            puzzle_piece_resource = SudokuPuzzlePiece()
            puzzle_piece_resource.parser = MockParser()
            result = puzzle_piece_resource.delete(1)
    
        expected = {'message': 'Successfully deleted piece at position (0, 1) on puzzle_id 1.'}
>       assert result == expected
E       AssertionError: assert ({'message': ...puzzle'}, 500) == {'message': '...puzzle_id 1.'}
E         +({'message': 'Unexpected error occurred while deleting value from puzzle'}, 500)
E         -{'message': 'Successfully deleted piece at position (0, 1) on puzzle_id 1.'}
E         Full diff:
E         - {'message': 'Successfully deleted piece at position (0, 1) on puzzle_id 1.'}
E         + ({'message': 'Unexpected error occurred while deleting value from puzzle'}, 500)

server/tests/unit/test_sudoku_resources.py:625: AssertionError
----------------------------- Captured stdout call -----------------------------
Unexpected error: 'NoneType' object is not subscriptable
_________________ test_get_sudoku_puzzles_delete_piece_invalid _________________

monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7fb18a573340>
user = <User (transient 140400506909792)>, mock_single_puzzles_for_player = None
mock_get_puzzle = None

    def test_get_sudoku_puzzles_delete_piece_invalid(monkeypatch, user, mock_single_puzzles_for_player,
                                                     mock_get_puzzle):
        """
        If a player attempts to make a move on a puzzle that they are associated with,
        the attempt should be successful.
        """
        class MockParser:
            """
            Mock the parsing function of the endpoint.
            """
            def add_argument(self, *args, **kwargs):
                """
                Mock add argument, do nothing.
                """
                return
    
            def parse_args(self):
                """
                Mock the parsing function by returning known dict
                """
                return {
                    'x_coordinate': 1,
                    'y_coordinate': 1
                }
    
        monkeypatch.setattr(db, "session", MockSession)
    
        with app.app_context():
            g.user = user
            puzzle_piece_resource = SudokuPuzzlePiece()
            puzzle_piece_resource.parser = MockParser()
            result = puzzle_piece_resource.delete(1)
    
        expected = ({'message': 'Attempt to delete piece at (1, 1) on puzzle_id 1 by user Jane Doe '
                                '(id = 1) was unsuccessful',
                     'reason': 'Changes can only be made to non-static puzzle pieces.'}, 400)
>       assert result == expected
E       AssertionError: assert ({'message': ...puzzle'}, 500) == ({'message': ...ieces.'}, 400)
E         At index 0 diff: {'message': 'Unexpected error occurred while deleting value from puzzle'} != {'message': 'Attempt to delete piece at (1, 1) on puzzle_id 1 by user Jane Doe (id = 1) was unsuccessful', 'reason': 'Changes can only be made to non-static puzzle pieces.'}
E         Full diff:
E           (
E         +  {'message': 'Unexpected error occurred while deleting value from puzzle'},
E         -  {'message': 'Attempt to delete piece at (1, 1) on puzzle_id 1 by user Jane '
E         -              'Doe (id = 1) was unsuccessful',
E         -   'reason': 'Changes can only be made to non-static puzzle pieces.'},...
E         
E         ...Full output truncated (6 lines hidden), use '-vv' to show

server/tests/unit/test_sudoku_resources.py:664: AssertionError
----------------------------- Captured stdout call -----------------------------
Unexpected error: 'NoneType' object is not subscriptable
_____________________ test_get_sudoku_puzzles_get_solution _____________________

user = <User (transient 140400508755680)>, mock_single_puzzles_for_player = None
mock_get_puzzle = None

    def test_get_sudoku_puzzles_get_solution(user, mock_single_puzzles_for_player, mock_get_puzzle):
        """
        If a player attempts to get the solution for a puzzle that they are
        associated with, the request should succeed.
        """
        with app.app_context():
            g.user = user
            puzzle_solution_resource = SudokuPuzzleSolution()
>           result = puzzle_solution_resource.get(1)

server/tests/unit/test_sudoku_resources.py:709: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
server/resources/sudoku.py:276: in get
    puzzle = Puzzle.get_puzzle(puzzle_id)
server/tests/unit/test_sudoku_resources.py:58: in mock_get_puzzle
    puzzle = Puzzle(difficulty_level=0.5, completed=False, size=3)
<string>:4: in __init__
    ???
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:433: in _initialize_instance
    manager.dispatch.init_failure(self, args, kwargs)
server/venv/lib/python3.8/site-packages/sqlalchemy/util/langhelpers.py:68: in __exit__
    compat.raise_(
server/venv/lib/python3.8/site-packages/sqlalchemy/util/compat.py:182: in raise_
    raise exception
server/venv/lib/python3.8/site-packages/sqlalchemy/orm/state.py:430: in _initialize_instance
    return manager.original_init(*mixed[1:], **kwargs)
server/models/sudoku_puzzle.py:55: in __init__
    self.set_pieces()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Puzzle (transient 140400508751984)>

    def set_pieces(self):
        """
        Set the puzzle pieces for the Sudoku board.
        """
        pieces = Sudoku(self.size).difficulty(self.difficulty).board  # produces 2D array of values
        for i, pi in enumerate(pieces):
            for j, piece in enumerate(pi):
>               static_piece = bool(piece[i][j])
E               TypeError: 'NoneType' object is not subscriptable

server/models/sudoku_puzzle.py:128: TypeError
=========================== short test summary info ============================
FAILED server/tests/unit/test_sudoku_puzzle.py::test_create_sudoku_puzzle_valid_defaults
FAILED server/tests/unit/test_sudoku_puzzle.py::test_create_sudoku_puzzle_valid_specification
FAILED server/tests/unit/test_sudoku_puzzle.py::test_set_point_value1 - TypeE...
FAILED server/tests/unit/test_sudoku_puzzle.py::test_set_point_value2 - TypeE...
FAILED server/tests/unit/test_sudoku_puzzle.py::test_get_puzzle_found - TypeE...
FAILED server/tests/unit/test_sudoku_resources.py::test_sudoku_to_json - Type...
FAILED server/tests/unit/test_sudoku_resources.py::test_get_sudoku_puzzles_all
FAILED server/tests/unit/test_sudoku_resources.py::test_get_sudoku_puzzle_found
FAILED server/tests/unit/test_sudoku_resources.py::test_get_sudoku_puzzles_add_move
FAILED server/tests/unit/test_sudoku_resources.py::test_get_sudoku_puzzles_add_move_invalid
FAILED server/tests/unit/test_sudoku_resources.py::test_get_sudoku_puzzles_delete_piece
FAILED server/tests/unit/test_sudoku_resources.py::test_get_sudoku_puzzles_delete_piece_invalid
FAILED server/tests/unit/test_sudoku_resources.py::test_get_sudoku_puzzles_get_solution
ERROR server/tests/unit/test_sudoku_puzzle.py::test_get_pieces_as_arr_all - T...
ERROR server/tests/unit/test_sudoku_puzzle.py::test_get_pieces_as_arr_static_only
ERROR server/tests/unit/test_sudoku_puzzle.py::test_recreate_original_puzzle
ERROR server/tests/unit/test_sudoku_puzzle.py::test_check_for_completion_null_values
ERROR server/tests/unit/test_sudoku_puzzle.py::test_check_for_completion_complete
ERROR server/tests/unit/test_sudoku_puzzle.py::test_check_for_completion_incorrect_values
ERROR server/tests/unit/test_sudoku_puzzle.py::test_check_discrepancies_none
ERROR server/tests/unit/test_sudoku_puzzle.py::test_check_discrepancies_many_incorrect
ERROR server/tests/unit/test_sudoku_puzzle.py::test_check_discrepancies_incomplete_puzzle
ERROR server/tests/unit/test_sudoku_puzzle.py::test_save - TypeError: 'int' o...
ERROR server/tests/unit/test_sudoku_puzzle.py::test_save_autocommit - TypeErr...
ERROR server/tests/unit/test_sudoku_puzzle.py::test_attempt_update_complete_puzzle
ERROR server/tests/unit/test_sudoku_puzzle.py::test_update_invalid_coordinate1
ERROR server/tests/unit/test_sudoku_puzzle.py::test_update_invalid_coordinate2
ERROR server/tests/unit/test_sudoku_puzzle.py::test_update_invalid_coordinate3
ERROR server/tests/unit/test_sudoku_puzzle.py::test_update_invalid_coordinate4
ERROR server/tests/unit/test_sudoku_puzzle.py::test_update_invalid_value1 - T...
ERROR server/tests/unit/test_sudoku_puzzle.py::test_update_invalid_value2 - T...
ERROR server/tests/unit/test_sudoku_puzzle.py::test_update_valid - TypeError:...
ERROR server/tests/unit/test_sudoku_puzzle.py::test_update_valid_complete_puzzle
ERROR server/tests/unit/test_sudoku_puzzle.py::test_set_puzzle_complete - Typ...
ERROR server/tests/unit/test_sudoku_puzzle.py::test_as_str - TypeError: 'int'...
=================== 13 failed, 61 passed, 22 errors in 6.44s ===================
